<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       https://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">
 
    
    <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" name="testDataSource">
        <property name="driverClassName" value="org/h2/Driver"/>
        <property name="url" value="jdbc:h2:mem:test"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
        
    </bean>
    
    <!-- Define JdbcTemplate using the test DataSource -->
    <bean class="org.springframework.jdbc.core.JdbcTemplate" name="jdbcTemplate">
        <!-- 
        the problem here is we have to give object of dataSource 
            in ref bean but though it is an interface we can't make object of that
            so we will use implementation class of dataSource which is
            DriverManagerDataSource so 
            we will inject the object of this class into bean attribute'
        -->
        <property name="dataSource">
            <ref bean="testDataSource"/>
        </property>
        <!-- using p-schema
         <bean class="org.springframework.jdbc.core.JdbcTemplate" name="jdbcTemplate" p:dataSource-ref="ds">
        -->
    </bean>
    <bean class="com.springjdbc.H2db.EmployeeDAOImplementation" name="employeeObj">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate"/>
        </property>
        
    </bean>
    
    
</beans>